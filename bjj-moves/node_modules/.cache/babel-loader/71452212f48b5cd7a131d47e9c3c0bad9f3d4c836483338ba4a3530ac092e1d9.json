{"ast":null,"code":"var _jsxFileName = \"/Users/robertmeelucey/Documents/Documents/personal projects/bjj-moves/bjj-moves/src/Dropdown3.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport YouTubeEmbed from \"./YouTubeEmbed\";\nimport { addEmoji } from \"./AddEmoji\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown3({\n  name,\n  moves,\n  fightStyle\n}) {\n  _s();\n  const [dropdown, setDropdown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropdown-btn\",\n      onClick: () => setDropdown(!dropdown),\n      children: addEmoji(name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), dropdown && moves.filter(move => move.fightStyle === fightStyle && move.type === name).map(move => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"youtube-embed\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: move.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(YouTubeEmbed, {\n        videoId: move.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)]\n    }, move.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown3, \"OxaoTJsszBDmSGYGKqcYc04UCMM=\");\n_c = Dropdown3;\nexport default Dropdown3;\nvar _c;\n$RefreshReg$(_c, \"Dropdown3\");","map":{"version":3,"names":["useState","YouTubeEmbed","addEmoji","jsxDEV","_jsxDEV","Dropdown3","name","moves","fightStyle","_s","dropdown","setDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","move","type","map","videoId","id","_c","$RefreshReg$"],"sources":["/Users/robertmeelucey/Documents/Documents/personal projects/bjj-moves/bjj-moves/src/Dropdown3.js"],"sourcesContent":["import { useState } from \"react\";\nimport YouTubeEmbed from \"./YouTubeEmbed\";\nimport { addEmoji } from \"./AddEmoji\";\n\nfunction Dropdown3({ name, moves, fightStyle }) {\n  const [dropdown, setDropdown] = useState(false);\n\n  return (\n    <div className=\"dropdown\">\n      <button className=\"dropdown-btn\" onClick={() => setDropdown(!dropdown)}>\n        {addEmoji(name)}\n      </button>\n      {dropdown &&\n        moves\n          .filter(\n            (move) => move.fightStyle === fightStyle && move.type === name\n          )\n          .map((move) => (\n            <div className=\"youtube-embed\" key={move.id}>\n              <h1>{move.name}</h1>\n              <YouTubeEmbed videoId={move.id} />\n            </div>\n          ))}\n    </div>\n  );\n}\n\nexport default Dropdown3;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACEI,OAAA;IAAKQ,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBT,OAAA;MAAQQ,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAG,QAAA,EACpEX,QAAQ,CAACI,IAAI;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EACRR,QAAQ,IACPH,KAAK,CACFY,MAAM,CACJC,IAAI,IAAKA,IAAI,CAACZ,UAAU,KAAKA,UAAU,IAAIY,IAAI,CAACC,IAAI,KAAKf,IAC5D,CAAC,CACAgB,GAAG,CAAEF,IAAI,iBACRhB,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BT,OAAA;QAAAS,QAAA,EAAKO,IAAI,CAACd;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBd,OAAA,CAACH,YAAY;QAACsB,OAAO,EAAEH,IAAI,CAACI;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFAE,IAAI,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtC,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CArBQJ,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAuBlB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}